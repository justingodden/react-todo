{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","name","onChange","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAEe,SAASA,EAASC,GAAQ,IAAD,EACVC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD/B,mBAC7BC,EAD6B,KACtBC,EADsB,KAG9BC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOV,QAGhBW,EAAe,SAAAF,GACjBA,EAAEG,iBAEFf,EAAMgB,SAAS,CACXC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAEVC,EAAS,KAGb,OACI,sBAAMiB,UAAU,YAAYN,SAAUF,EAAtC,SACKd,EAAME,KACH,qCACI,uBACIoB,UAAU,kBACVC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLC,SAAUd,EACVe,IAAKpB,IAET,wBAAQgB,UAAU,mBAAmBK,QAASb,EAA9C,uBAKJ,qCACI,uBACIQ,UAAU,aACVC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLC,SAAUd,EACVe,IAAKpB,IAET,wBAAQgB,UAAU,cAAcK,QAASb,EAAzC,2B,mBC9CL,SAASc,EAAT,GAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EAClD/B,mBAAS,CAC7BgB,GAAI,KACJd,MAAO,KAH+D,mBACnED,EADmE,KAC7D+B,EAD6D,KAc1E,OAAI/B,EAAKe,GACE,cAAClB,EAAD,CAAUG,KAAMA,EAAMc,SATZ,SAAAb,GACjB6B,EAAW9B,EAAKe,GAAId,GACpB8B,EAAQ,CACJhB,GAAI,KACJd,MAAO,QASX0B,EAAMK,KACF,SAACC,EAAMC,GAAP,OACA,sBACId,UAAWa,EAAKE,WAAa,oBAAsB,WADvD,UAII,qBAAmBV,QAAS,kBAAMG,EAAaK,EAAKlB,KAApD,SACKkB,EAAKd,MADAc,EAAKlB,IAIf,sBAAKK,UAAU,QAAf,UACI,cAAC,IAAD,CACIA,UAAU,cACVK,QAAS,kBAAMI,EAAWI,EAAKlB,OAEnC,cAAC,IAAD,CACIK,UAAU,YACVK,QAAS,kBAAMM,EAAQ,CAAEhB,GAAIkB,EAAKlB,GAAId,MAAOgC,EAAKd,eAbrDe,MCxBN,SAASE,IAAY,IAAD,EACLrC,mBAAS,IADJ,mBACxB4B,EADwB,KACjBU,EADiB,KAoC/B,OACI,gCACI,4DACA,cAACxC,EAAD,CAAUiB,SApCF,SAAAmB,GACZ,GAAIA,EAAKd,OAAQ,QAAQmB,KAAKL,EAAKd,MAAnC,CAIA,IAAMoB,EAAQ,CAAIN,GAAJ,mBAAaN,IAE3BU,EAASE,OA8BL,cAACb,EAAD,CACIC,MAAOA,EACPC,aAhBS,SAAAb,GACjB,IAAIyB,EAAeb,EAAMK,KAAI,SAAAC,GAIzB,OAHIA,EAAKlB,KAAOA,IACZkB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXI,EAASG,IAUDX,WAvBO,SAAAd,GACf,IAAM0B,EAAY,YAAId,GAAOe,QAAO,SAAAT,GAAI,OAAIA,EAAKlB,KAAOA,KACxDsB,EAASI,IAsBDX,WA/BO,SAACa,EAAQC,GACpBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAG3CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKb,KAAI,SAAAc,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,cCT5DC,MARf,WACE,OACE,qBAAK3B,UAAU,WAAf,SACE,cAACgB,EAAD,OCHNY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4693a27f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nexport default function TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '')\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        })\r\n        setInput('')\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n                <>\r\n                    <input\r\n                        className=\"todo-input edit\"\r\n                        placeholder=\"Add a todo\"\r\n                        value={input}\r\n                        name=\"text\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className=\"todo-button edit\" onClick={handleSubmit}>\r\n                        Update\r\n                    </button>\r\n                </>\r\n                    ) : (\r\n                <>\r\n                    <input\r\n                        className=\"todo-input\"\r\n                        placeholder=\"Add a todo\"\r\n                        value={input}\r\n                        name=\"text\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className=\"todo-button\" onClick={handleSubmit}>\r\n                        Add todo\r\n                    </button>\r\n                </>\r\n                )\r\n\r\n        }\r\n            \r\n        </form>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nexport default function Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return (\r\n        todos.map(\r\n            (todo, index) => (\r\n            <div\r\n                className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n                key={index}\r\n            >\r\n                <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                    {todo.text}\r\n                </div>\r\n\r\n                <div className=\"icons\">\r\n                    <RiCloseCircleLine\r\n                        className=\"delete-icon\"\r\n                        onClick={() => removeTodo(todo.id)}\r\n                    />\r\n                    <TiEdit\r\n                        className=\"edit-icon\"\r\n                        onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n                    />\r\n                </div>\r\n            </div>\r\n            )\r\n        )\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport Todo from './Todo'\r\nimport TodoForm from './TodoForm'\r\n\r\nexport default function TodoList() {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos]\r\n\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return\r\n        }\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n        setTodos(removeArr)\r\n    }\r\n\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>What's the plan for today?</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo\r\n                todos={todos}\r\n                completeTodo={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}